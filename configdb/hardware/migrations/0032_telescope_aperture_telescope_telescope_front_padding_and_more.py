# Generated by Django 4.0.3 on 2022-04-20 06:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hardware', '0031_auto_20220412_2321'),
    ]

    operations = [
        migrations.AddField(
            model_name='telescope',
            name='aperture',
            field=models.FloatField(default=0.0, help_text='The aperture of this telescope in meters. This is used to group telescopes by aperture class', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='telescope',
            name='telescope_front_padding',
            field=models.FloatField(default=90, help_text='Setup time for taking on observation on this telescope, applied once per observation. This is for an average of tasks like initial slewing and opening the enclosure.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='camera',
            name='orientation',
            field=models.FloatField(default=0.0, help_text='The orientation of the Cameras ccd in degrees measured counterclockwise from North (y-axis)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(360.0)]),
        ),
        migrations.AlterField(
            model_name='cameratype',
            name='max_rois',
            field=models.IntegerField(default=0, help_text='Maximum regions of interest that this camera type supports', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='cameratype',
            name='pixels_x',
            field=models.IntegerField(default=0, help_text='Number of pixels on x-axis', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='cameratype',
            name='pixels_y',
            field=models.IntegerField(default=0, help_text='Number of pixels on y-axis', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='cameratype',
            name='pscale',
            field=models.FloatField(help_text='Pixel scale in arcseconds/pixel', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='configurationtypeproperties',
            name='config_change_overhead',
            field=models.FloatField(default=0, help_text='Time necessary for switching to this configuration type from a different configuration type during an observation, like going between a Spectrum and a Lamp Flat for example. This could account for starting up a lamp.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='genericmode',
            name='overhead',
            field=models.FloatField(help_text='Overhead associated with the generic mode. Where this overhead is applied depends on what type of generic mode this is for. For example, a readout mode is applied per exposure, while an acquisition overhead is applied for the acquisition step at the beginning of an observation.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='acquire_exposure_time',
            field=models.FloatField(default=0, help_text='The default exposure time to use for acquisition exposures with this instrument type.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='config_front_padding',
            field=models.FloatField(default=0, help_text='Setup time for each configuration of an observation on this instrument. This is for things like configuration specific setup time.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='default_acceptability_threshold',
            field=models.FloatField(default=90.0, help_text='The default acceptability threshold to use for Requests submitted on this instrument type. Acceptability threshold is the minimum percentage of data an Observation must take before causing its Request to be counted as complete.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='fixed_overhead_per_exposure',
            field=models.FloatField(default=1, help_text='A per exposure overhead to be applied. This accounts for any per exposure setup or delays found in the camera or instrument control software.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='instrumenttype',
            name='observation_front_padding',
            field=models.FloatField(default=90, help_text='Setup time for taking on observation on this instrument, applied once per observation. This is for tasks like initial slewing and instrument configuration.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='opticalelementgroup',
            name='element_change_overhead',
            field=models.FloatField(default=0, help_text='Overhead in seconds when changing between optical elements within this optical element group', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='site',
            name='lat',
            field=models.FloatField(default=0.0, help_text='Site latitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)]),
        ),
        migrations.AlterField(
            model_name='site',
            name='long',
            field=models.FloatField(default=0.0, help_text='Site longitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='ha_limit_neg',
            field=models.FloatField(help_text='Negative hour-angle limit in hours', validators=[django.core.validators.MinValueValidator(-12), django.core.validators.MaxValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='ha_limit_pos',
            field=models.FloatField(help_text='Positive hour-angle limit in hours', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='horizon',
            field=models.FloatField(help_text='Minimum distance from horizion telescope can point without field of view being obscured, in degrees', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='instrument_change_overhead',
            field=models.FloatField(default=0, help_text='The maximum amount of time it takes to switch instruments on this telescope', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='lat',
            field=models.FloatField(help_text='Telescope latitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='long',
            field=models.FloatField(help_text='Telescope longitude in decimal degrees', validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='minimum_slew_overhead',
            field=models.FloatField(default=0, help_text='The minimum amount of time a slew can take in seconds for targets within a single observation', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='slew_rate',
            field=models.FloatField(default=0, help_text='The rate in sec/arcsec at which the telescope slews between targets within a single observation', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='telescope',
            name='zenith_blind_spot',
            field=models.FloatField(default=0.0, help_text='For AltAz telescopes, radius of zenith blind spot in degrees', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(180)]),
        ),
    ]
